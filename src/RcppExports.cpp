// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// C_extract_window
NumericMatrix C_extract_window(NumericMatrix r, IntegerVector w, IntegerVector idx);
RcppExport SEXP _MultiscaleDEM_C_extract_window(SEXP rSEXP, SEXP wSEXP, SEXP idxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type r(rSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type idx(idxSEXP);
    rcpp_result_gen = Rcpp::wrap(C_extract_window(r, w, idx));
    return rcpp_result_gen;
END_RCPP
}
// subset_mat_rows
NumericMatrix subset_mat_rows(NumericMatrix x, LogicalVector idx);
RcppExport SEXP _MultiscaleDEM_subset_mat_rows(SEXP xSEXP, SEXP idxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type idx(idxSEXP);
    rcpp_result_gen = Rcpp::wrap(subset_mat_rows(x, idx));
    return rcpp_result_gen;
END_RCPP
}
// C_Check_Xmat
bool C_Check_Xmat(NumericMatrix X);
RcppExport SEXP _MultiscaleDEM_C_Check_Xmat(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(C_Check_Xmat(X));
    return rcpp_result_gen;
END_RCPP
}
// C_OLS
List C_OLS(arma::mat X, arma::mat Y);
RcppExport SEXP _MultiscaleDEM_C_OLS(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(C_OLS(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// C_multiscale
List C_multiscale(NumericMatrix r, IntegerVector w, NumericMatrix X, int type, bool na_rm);
RcppExport SEXP _MultiscaleDEM_C_multiscale(SEXP rSEXP, SEXP wSEXP, SEXP XSEXP, SEXP typeSEXP, SEXP na_rmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type r(rSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type type(typeSEXP);
    Rcpp::traits::input_parameter< bool >::type na_rm(na_rmSEXP);
    rcpp_result_gen = Rcpp::wrap(C_multiscale(r, w, X, type, na_rm));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MultiscaleDEM_C_extract_window", (DL_FUNC) &_MultiscaleDEM_C_extract_window, 3},
    {"_MultiscaleDEM_subset_mat_rows", (DL_FUNC) &_MultiscaleDEM_subset_mat_rows, 2},
    {"_MultiscaleDEM_C_Check_Xmat", (DL_FUNC) &_MultiscaleDEM_C_Check_Xmat, 1},
    {"_MultiscaleDEM_C_OLS", (DL_FUNC) &_MultiscaleDEM_C_OLS, 2},
    {"_MultiscaleDEM_C_multiscale", (DL_FUNC) &_MultiscaleDEM_C_multiscale, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_MultiscaleDEM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
